{"version":3,"sources":["components/BaseParts/Navbar.js","components/BaseParts/Sidebar.js","components/BaseParts/Loader.js","components/TagsList/TagsCurrentValueRow.js","components/TagsList/TagsCurrentValueList.js","components/TagsList/TagsHistoricalGraph.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Sidebar","id","role","aria-orientation","data-toggle","aria-controls","aria-selected","Loader","TagsCurrentValueRow","tag","index","code","name","value","TagsCurrentValueList","props","tags","map","Graph","prepared_tags","tagsHistory","tag_id","tag_code","tag_name","values","x","Date","add_date","y","height","width","xType","data","BASE_URL","App","React","useState","setTags","deviceName","setDeviceName","loadingTags","setLoadingTags","setTagsHistory","readDeviceTags","fetch","then","responce","json","useEffect","interval","setInterval","clearInterval","deviceParameters","setTimeout","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee3d5211.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark bg-color-indigo header-height m-0\">\r\n            <a className=\"navbar-brand\" href=\"#\">WebArm</a>\r\n            \r\n            <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Предприятие</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Обьекты</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Кабинет</a>\r\n            </li>\r\n            </ul>  \r\n    \r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item ml-auto\">\r\n                <a className=\"nav-link\" href=\"#\">Войти</a>\r\n            </li>\r\n            </ul> \r\n        </nav>       \r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"col-2 m-0 p-0\">\r\n        <div className=\"bg-dark bg-color-pale-indigo p-3 h-100\">\r\n\r\n            <div className=\"nav flex-column nav-pills \" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                <a className=\"nav-link active\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Обзор</a>\r\n                <a className=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Настройки</a>\r\n                <a className=\"nav-link\" id=\"v-pills-messages-tab\" data-toggle=\"pill\" href=\"#v-pills-messages\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Графики</a>\r\n                <a className=\"nav-link\" id=\"v-pills-settings-tab\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">Журнал</a>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader() {\r\n    return(\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction TagsCurrentValueRow({tag, index}) {\r\n    return (\r\n        <tr>\r\n            <td> {index + 1} </td>   \r\n            <td> {tag.code} </td>\r\n            <td> {tag.name} </td>\r\n            <td> {tag.value} </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nTagsCurrentValueRow.propTypes = {\r\n    tag: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TagsCurrentValueRow","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TagsCurrentValueRow from './TagsCurrentValueRow'\r\n\r\nfunction TagsCurrentValueList(props) {\r\n    return (\r\n        <div>     \r\n            <div className=\"table-responsive\">\r\n            <table className=\"table table-striped table-sm\">\r\n                <thead> \r\n                <tr>\r\n                    <td>№</td>\r\n                    <td>Код параметра</td>\r\n                    <td>Наименование параметра</td>\r\n                    <td>Текущее значение</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { props.tags.map((tag, index) => {\r\n                        return (\r\n                            <TagsCurrentValueRow tag={tag} key={tag.code} index={index} />\r\n                        )\r\n                    }) }\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTagsCurrentValueList.propTypes = {\r\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TagsCurrentValueList","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {XYPlot, XAxis, YAxis, LineSeries, VerticalGridLines, HorizontalGridLines} from 'react-vis';\r\n\r\nfunction Graph(props) {\r\n    const tags = props.tagsHistory\r\n    const prepared_tags = tags.map( (tag, index) => {\r\n        return (\r\n            {\r\n                tag_id: tag.tag_id,\r\n                tag_code: tag.tag_code,\r\n                tag_name: tag.tag_name,\r\n                values: tag.values.map( (value) => {\r\n                    return {x: new Date(value.add_date), y: value.value}\r\n                } )\r\n            }\r\n        )\r\n    })     \r\n \r\n    return (\r\n        <div className=\"App\">\r\n        <XYPlot height={400} width={1000} xType=\"time\">\r\n            <VerticalGridLines />\r\n            <HorizontalGridLines />\r\n            <XAxis />\r\n            <YAxis />\r\n            { prepared_tags.map((tag, index)=>{\r\n                return <LineSeries data={tag.values} key={tag.tag_id} />\r\n            }) }\r\n        </XYPlot>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nGraph.propTypes = {\r\n    tagsHistory: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default Graph","import './App.css'\r\nimport React, { useEffect } from 'react' \r\nimport Navbar from './components/BaseParts/Navbar'\r\nimport Sidebar from './components/BaseParts/Sidebar'\r\nimport Loader from './components/BaseParts/Loader'\r\nimport TagsCurrentValueList from './components/TagsList/TagsCurrentValueList'\r\n\r\nimport '../node_modules/react-vis/dist/style.css'\r\nimport Graph from './components/TagsList/TagsHistoricalGraph'\r\n\r\nconst BASE_URL = \"http://bfcloud.space/\"\r\n// const BASE_URL = \"http://localhost:8000/\"\r\n\r\n\r\nfunction App() {\r\n  const [tags, setTags] = React.useState([])\r\n  const [deviceName, setDeviceName] = React.useState('')\r\n  const [loadingTags, setLoadingTags] = React.useState(true)\r\n\r\n  const [tagsHistory, setTagsHistory] = React.useState([])\r\n\r\n  function readDeviceTags() {\r\n    fetch(BASE_URL + \"api/v1/device/current-values\")\r\n    .then(responce => responce.json())\r\n    .then(tags => setTags(tags) )  \r\n  }\r\n\r\n  function readTagsHistory() {\r\n    fetch(BASE_URL + \"api/v1/device/tags/history\")\r\n    .then(responce => responce.json())\r\n    .then(tags => setTagsHistory(tags) )  \r\n  }\r\n\r\n  // set update unterval\r\n  useEffect(() => {\r\n    const interval = setInterval(readDeviceTags, 2000)\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  // get Device parameters from server and set Device Name\r\n  useEffect(() => {\r\n    fetch(BASE_URL + \"api/v1/device\")\r\n      .then(responce => responce.json())\r\n      .then(deviceParameters => { setDeviceName(deviceParameters.name) })\r\n  }, [])\r\n\r\n  // get Tags current values from server\r\n  useEffect(() => {\r\n    setTimeout( () => {\r\n      readDeviceTags()\r\n      readTagsHistory()\r\n      setLoadingTags(false)\r\n    }, 2000)\r\n  }, [])\r\n\r\n  // render the page\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <div className=\"row m-0 p-0\">\r\n        <Sidebar />\r\n        <div className=\"col-10 m-0 p-0\">\r\n          <div className=\"content-height\">\r\n            <div className=\"p-3\">\r\n              <p>Устройство: <b>{deviceName}</b></p>\r\n              {loadingTags ? <Loader /> : <TagsCurrentValueList tags={tags} />}\r\n            </div>\r\n\r\n            <Graph tagsHistory={tagsHistory}/>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}