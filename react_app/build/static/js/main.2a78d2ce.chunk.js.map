{"version":3,"sources":["components/BaseParts/Navbar.js","components/BaseParts/Sidebar.js","components/BaseParts/Loader.js","components/TagsList/TagsCurrentValueRow.js","components/TagsList/TagsCurrentValueList.js","components/TagsGraph/Graph.js","components/TagsGraph/Legend.js","components/TagsGraph/GraphColors.js","components/TagsGraph/TagsHistoricalGraph.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","Sidebar","id","role","aria-orientation","data-toggle","aria-controls","aria-selected","Loader","TagsCurrentValueRow","tag","index","code","name","value","TagsCurrentValueList","props","tags","map","Graph","React","useState","lastDrawLocation","setLastDrawLocation","resetZoomBtn","onClick","Fragment","height","width","margin","left","right","top","bottom","xType","animation","xDomain","yDomain","tickTotal","data","values","color","curve_color","tag_id","onBrushEnd","area","onDrag","setState","Legend","_clickHandler","item","items","state","disabled","_searchChangeHandler","searchText","title","tag_name","this","onSearchChange","onItemClick","Component","colors","getColor","clorsNumber","length","TagsHistoricalGraph","prepared_tags","tagsHistory","tag_code","x","Date","add_date","y","BASE_URL","App","setTags","deviceName","setDeviceName","loading","setLoading","setTagsHistory","readDeviceTags","fetch","then","responce","json","readTagsHistory","useEffect","deviceParameters","setTimeout","tagsUpdateInterval","setInterval","graphUpdateInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a78d2ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark bg-color-indigo header-height m-0\">\r\n            <a className=\"navbar-brand\" href=\"#\">WebArm</a>\r\n            \r\n            <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Предприятие</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Обьекты</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Кабинет</a>\r\n            </li>\r\n            </ul>  \r\n    \r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item ml-auto\">\r\n                <a className=\"nav-link\" href=\"#\">Войти</a>\r\n            </li>\r\n            </ul> \r\n        </nav>       \r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"col-2 m-0 p-0\">\r\n        <div className=\"bg-dark bg-color-pale-indigo p-3 h-100\">\r\n\r\n            <div className=\"nav flex-column nav-pills \" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                <a className=\"nav-link active\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">Обзор</a>\r\n                <a className=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">Настройки</a>\r\n                <a className=\"nav-link\" id=\"v-pills-messages-tab\" data-toggle=\"pill\" href=\"#v-pills-messages\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">Графики</a>\r\n                <a className=\"nav-link\" id=\"v-pills-settings-tab\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">Журнал</a>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader() {\r\n    return(\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction TagsCurrentValueRow({tag, index}) {\r\n    return (\r\n        <tr>\r\n            <td> {index + 1} </td>   \r\n            <td> {tag.code} </td>\r\n            <td> {tag.name} </td>\r\n            <td> {tag.value} </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nTagsCurrentValueRow.propTypes = {\r\n    tag: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TagsCurrentValueRow","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TagsCurrentValueRow from './TagsCurrentValueRow'\r\n\r\nfunction TagsCurrentValueList(props) {\r\n    return (\r\n        <div>     \r\n            <div className=\"table-responsive\">\r\n            <table className=\"table table-striped table-sm\">\r\n                <thead> \r\n                <tr>\r\n                    <td>№</td>\r\n                    <td>Код параметра</td>\r\n                    <td>Наименование параметра</td>\r\n                    <td>Текущее значение</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { props.tags.map((tag, index) => {\r\n                        return (\r\n                            <TagsCurrentValueRow tag={tag} key={tag.code} index={index} />\r\n                        )\r\n                    }) }\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTagsCurrentValueList.propTypes = {\r\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TagsCurrentValueList","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    XYPlot, \r\n    XAxis, \r\n    YAxis, \r\n    LineSeries,\r\n    // VerticalGridLines, \r\n    HorizontalGridLines, \r\n    Highlight} from 'react-vis';\r\n\r\n\r\n\r\nfunction Graph(props) {\r\n    const tags = props.tags   \r\n    const [lastDrawLocation, setLastDrawLocation] = React.useState(null)\r\n\r\n    const resetZoomBtn = (\r\n        <button\r\n            className=\"btn btn-secondary m-3 btn-graph\"\r\n            onClick={() => setLastDrawLocation(null)}\r\n            >\r\n            Вернуть масштаб\r\n        </button>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='graph-container'>\r\n                <XYPlot \r\n                    height={400} \r\n                    width={1000}\r\n                    margin={{left: 30, right: 0, top: 0, bottom: 30}} \r\n                    xType=\"time\"\r\n                    animation\r\n                    xDomain={\r\n                        lastDrawLocation && [\r\n                            lastDrawLocation.left,\r\n                            lastDrawLocation.right\r\n                        ]\r\n                    }\r\n                    yDomain={\r\n                        lastDrawLocation && [\r\n                            lastDrawLocation.bottom,\r\n                            lastDrawLocation.top\r\n                        ]\r\n                    }       \r\n                >\r\n                    <HorizontalGridLines />\r\n                    <XAxis tickTotal={20} />\r\n                    <YAxis />\r\n                    { tags.map((tag)=>{\r\n                        return <LineSeries data={tag.values} color={tag.curve_color} key={tag.tag_id} />\r\n                    }) }\r\n\r\n                    <Highlight\r\n                        onBrushEnd={area => setLastDrawLocation(area)}\r\n                        onDrag={area => {\r\n                            this.setState({\r\n                                lastDrawLocation: {\r\n                                    bottom: lastDrawLocation.bottom + (area.top - area.bottom),\r\n                                    left: lastDrawLocation.left - (area.right - area.left),\r\n                                    right: lastDrawLocation.right - (area.right - area.left),\r\n                                    top: lastDrawLocation.top + (area.top - area.bottom)\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                </XYPlot>\r\n            </div>\r\n            {lastDrawLocation ? resetZoomBtn : null}\r\n        </ React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nGraph.propTypes = {\r\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default Graph","import React from 'react';\r\nimport SearchableDiscreteColorLegend from 'react-vis/dist/legends/searchable-discrete-color-legend';\r\n\r\nexport default class Legend extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      searchText: ''\r\n    };\r\n    this.state.items = this.props.tags.map((tag) => {\r\n        return {title: tag.tag_name, color: tag.curve_color}\r\n    });\r\n  }\r\n\r\n  _clickHandler = item => {\r\n    const {items} = this.state;\r\n    item.disabled = !item.disabled;\r\n    this.setState({items});\r\n  };\r\n\r\n  _searchChangeHandler = searchText => {\r\n    this.setState({searchText});\r\n  };\r\n\r\n  render() {\r\n    const {items, searchText} = this.state;\r\n    return (\r\n    <div className='d-block pl-3'>\r\n      <SearchableDiscreteColorLegend\r\n        height={400}\r\n        // width={300}\r\n        onSearchChange={this._searchChangeHandler}\r\n        searchText={searchText}\r\n        onItemClick={this._clickHandler}\r\n        items={items}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}","const colors = ['#19CDD7', '#DDB27C', '#88572C', '#FF991F', '#F15C17', '#223F9A', '#DA70BF', '#125C77', '#4DC19C', '#776E57', '#12939A', '#17B8BE', '#F6D18A', '#B7885E', '#FFCB99', '#F89570', '#829AE3', '#E79FD5', '#1E96BE', '#89DAC1', '#B3AD9E']\r\n\r\nexport default function getColor(index) {\r\n    const clorsNumber = colors.length\r\n    var ind\r\n    if (index+1 > clorsNumber) {\r\n        ind = index % clorsNumber\r\n    }\r\n    else {\r\n        ind = index\r\n    }\r\n    return colors[ind]\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Graph from './Graph'\r\nimport Legend from './Legend'\r\nimport getColor from './GraphColors'\r\n\r\n\r\nfunction TagsHistoricalGraph(props) {\r\n    const tags = props.tagsHistory\r\n    const prepared_tags = tags.map( (tag, index) => {\r\n        return (\r\n            {\r\n                tag_id: tag.tag_id,\r\n                tag_code: tag.tag_code,\r\n                tag_name: tag.tag_name,\r\n                curve_color : getColor(index),\r\n                values: tag.values.map( (value) => {\r\n                    return {x: new Date(value.add_date), y: value.value}\r\n                } )\r\n            }\r\n        )\r\n    })     \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row m-0 p-3\">\r\n                <div className=\"col-8 m-0 p-0\">\r\n                    <Graph tags={prepared_tags} />\r\n                </div>\r\n                <div className=\"col-4 m-0 p-0\">\r\n                    <Legend tags={prepared_tags} />\r\n                </div>\r\n            </div>\r\n        </ React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nTagsHistoricalGraph.propTypes = {\r\n    tagsHistory: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TagsHistoricalGraph","import './App.css'\r\nimport React, { useEffect } from 'react' \r\nimport Navbar from './components/BaseParts/Navbar'\r\nimport Sidebar from './components/BaseParts/Sidebar'\r\nimport Loader from './components/BaseParts/Loader'\r\nimport TagsCurrentValueList from './components/TagsList/TagsCurrentValueList'\r\n\r\nimport '../node_modules/react-vis/dist/style.css'\r\nimport TagsHistoricalGraph from './components/TagsGraph/TagsHistoricalGraph'\r\n\r\nconst BASE_URL = \"http://bfcloud.space/\"\r\n// const BASE_URL = \"http://localhost:8000/\"\r\n\r\n\r\nfunction App() {\r\n  const [tags, setTags] = React.useState([])\r\n  const [deviceName, setDeviceName] = React.useState('')\r\n  const [loading, setLoading] = React.useState(true)\r\n  const [tagsHistory, setTagsHistory] = React.useState([])\r\n\r\n  function readDeviceParameters() {\r\n    fetch(BASE_URL + \"api/v1/device\")\r\n      .then(responce => responce.json())\r\n      .then(deviceParameters => { setDeviceName(deviceParameters.name) }) \r\n  }\r\n\r\n  function readDeviceTags() {\r\n    fetch(BASE_URL + \"api/v1/device/current-values\")\r\n    .then(responce => responce.json())\r\n    .then(tags => setTags(tags) )  \r\n  }\r\n\r\n  function readTagsHistory() {\r\n    fetch(BASE_URL + \"api/v1/device/tags/history\")\r\n    .then(responce => responce.json())\r\n    .then(tags => setTagsHistory(tags) )  \r\n  }\r\n\r\n  // read parameters\r\n  useEffect(() => {\r\n    readDeviceParameters();\r\n    readDeviceTags();\r\n    readTagsHistory();\r\n    setTimeout( () => { setLoading(false) }, 2000);\r\n\r\n    // set update interval\r\n    const tagsUpdateInterval = setInterval(readDeviceTags, 2000);\r\n    const graphUpdateInterval = setInterval(readTagsHistory, 10000)\r\n    return () => {\r\n      clearInterval(tagsUpdateInterval);\r\n      clearInterval(graphUpdateInterval);\r\n    };\r\n  }, [])\r\n\r\n  \r\n  // render the page\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      <div className=\"row m-0 p-0\">\r\n        <Sidebar />\r\n        <div className=\"col-10 m-0 p-0\">\r\n          <div className=\"content-height\">\r\n            <div className=\"p-3\">\r\n              <p>Устройство: <b>{deviceName}</b></p>\r\n              {loading ? <Loader /> : <TagsCurrentValueList tags={tags} />}\r\n            </div>\r\n\r\n            {loading ? null : <TagsHistoricalGraph tagsHistory={tagsHistory}/> }\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}