{"version":3,"sources":["components/BaseParts/Navbar.js","components/BaseParts/Sidebar.js","components/BaseParts/Loader.js","components/TagsList/TagsCurrentValueRow.js","components/TagsList/TagsCurrentValueList.js","components/TagsGraph/Graph.js","components/TagsGraph/Legend.js","components/TagsGraph/TagsHistoricalGraph.js","components/TagsGraph/GraphColors.js","pages/device/overview.js","utils/localSettings.js","pages/device/settings.js","pages/device/eventsLog.js","pages/device/graphs.js","pages/pageNotFound.js","pages/device/deviceApp.js","pages/welcome.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","href","Sidebar","id","role","aria-orientation","activeClassName","Loader","TagsCurrentValueRow","tag","index","code","name","value","TagsCurrentValueList","props","tags","map","Graph","React","useState","lastDrawLocation","setLastDrawLocation","resetZoomBtn","onClick","filter","disabled","length","Fragment","height","width","margin","left","right","top","bottom","xType","animation","xDomain","yDomain","tickTotal","data","values","color","curve_color","tag_id","onBrushEnd","area","onDrag","setState","dontCheckIfEmpty","x","y","Legend","_clickHandler","item","items","state","_searchChangeHandler","searchText","title","tag_name","this","onSearchChange","onItemClick","Component","TagsHistoricalGraph","tagsHistory","disabledGraphs","toggleCurveDisplay","colors","getColor","clorsNumber","BASE_URL","DeviceOverviewPage","setTags","deviceName","setDeviceName","loading","setLoading","setTagsHistory","readDeviceTags","fetch","then","responce","json","readTagsHistory","prepared_tags","tag_code","display_on_garaph","Date","add_date","prev","fltr","entry","useEffect","deviceParameters","setTimeout","tagsUpdateInterval","setInterval","graphUpdateInterval","clearInterval","n","DeviceSettingsPage","DeviceEventsLogPage","Page404","DeviceApp","exact","path","component","DeviceGraphsPage","WelcomePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2ca802.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark bg-color-indigo header-height m-0\">\r\n            <Link className=\"navbar-brand\" to=\"/\">WebArm</Link>\r\n\r\n            <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Предприятие</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Обьекты</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Кабинет</a>\r\n            </li>\r\n            </ul>  \r\n    \r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item ml-auto\">\r\n                <a className=\"nav-link\" href=\"#\">Войти</a>\r\n            </li>\r\n            </ul> \r\n        </nav>       \r\n    );\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"col-2 m-0 p-0\">\r\n        <div className=\"bg-dark bg-color-pale-indigo p-3 h-100\">\r\n\r\n            <div className=\"nav flex-column nav-pills \" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/device/overview\">Обзор</NavLink>\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/device/settings\">Настройки</NavLink>\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/device/graphs\">Графики</NavLink>\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/device/events\">Журнал</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nexport default function Loader() {\r\n    return(\r\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction TagsCurrentValueRow({tag, index}) {\r\n    return (\r\n        <tr>\r\n            <td> {index + 1} </td>   \r\n            <td> {tag.code} </td>\r\n            <td> {tag.name} </td>\r\n            <td> {tag.value} </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nTagsCurrentValueRow.propTypes = {\r\n    tag: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default TagsCurrentValueRow","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TagsCurrentValueRow from './TagsCurrentValueRow'\r\n\r\nfunction TagsCurrentValueList(props) {\r\n    return (\r\n        <div>     \r\n            <div className=\"table-responsive\">\r\n            <table className=\"table table-striped table-sm\">\r\n                <thead> \r\n                <tr>\r\n                    <td>№</td>\r\n                    <td>Код параметра</td>\r\n                    <td>Наименование параметра</td>\r\n                    <td>Текущее значение</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { props.tags.map((tag, index) => {\r\n                        return (\r\n                            <TagsCurrentValueRow tag={tag} key={tag.code} index={index} />\r\n                        )\r\n                    }) }\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTagsCurrentValueList.propTypes = {\r\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TagsCurrentValueList","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    XYPlot, \r\n    XAxis, \r\n    YAxis, \r\n    LineSeries,\r\n    // VerticalGridLines, \r\n    HorizontalGridLines, \r\n    Highlight} from 'react-vis';\r\n\r\n\r\n\r\nfunction Graph(props) {\r\n    const tags = props.tags   \r\n    const [lastDrawLocation, setLastDrawLocation] = React.useState(null)\r\n\r\n    const resetZoomBtn = (\r\n        <button\r\n            className=\"btn btn-secondary m-3 btn-graph\"\r\n            onClick={() => setLastDrawLocation(null)}\r\n            >\r\n            Вернуть масштаб\r\n        </button>)\r\n\r\n    const hasDisplay = tags.filter( tag => tag.disabled === false ).length > 0\r\n    if (hasDisplay) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='graph-container'>\r\n                    <XYPlot \r\n                        height={400} \r\n                        width={1000}\r\n                        margin={{left: 40, right: 0, top: 0, bottom: 30}} \r\n                        xType=\"time\"\r\n                        animation\r\n                        xDomain={\r\n                            lastDrawLocation && [\r\n                                lastDrawLocation.left,\r\n                                lastDrawLocation.right\r\n                            ]\r\n                        }\r\n                        yDomain={\r\n                            lastDrawLocation && [\r\n                                lastDrawLocation.bottom,\r\n                                lastDrawLocation.top\r\n                            ]\r\n                        }       \r\n                    >\r\n                        <HorizontalGridLines />\r\n                        <XAxis tickTotal={15} />\r\n                        <YAxis />\r\n                        { tags.map((tag)=>{ \r\n                            return !tag.disabled ? <LineSeries data={tag.values} color={tag.curve_color} key={tag.tag_id} /> : null\r\n                        }) }\r\n    \r\n                        <Highlight\r\n                            onBrushEnd={area => setLastDrawLocation(area)}\r\n                            onDrag={area => {\r\n                                this.setState({\r\n                                    lastDrawLocation: {\r\n                                        bottom: lastDrawLocation.bottom + (area.top - area.bottom),\r\n                                        left: lastDrawLocation.left - (area.right - area.left),\r\n                                        right: lastDrawLocation.right - (area.right - area.left),\r\n                                        top: lastDrawLocation.top + (area.top - area.bottom)\r\n                                    }\r\n                                });\r\n                            }}\r\n                        />\r\n                    </XYPlot>\r\n                </div>\r\n                {lastDrawLocation ? resetZoomBtn : null}\r\n            </ React.Fragment>\r\n        );\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n            <div className='graph-container'>\r\n                <XYPlot \r\n                    height={400} \r\n                    width={1000}\r\n                    dontCheckIfEmpty\r\n                    margin={{left: 30, right: 0, top: 0, bottom: 30}}      \r\n                >\r\n                    <HorizontalGridLines />\r\n                    <XAxis />\r\n                    <YAxis />\r\n                    <LineSeries data={[{x:0, y:0}]} /> \r\n                </XYPlot>\r\n            </div>\r\n            </ React.Fragment> \r\n        )                   \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nGraph.propTypes = {\r\n    tags: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default Graph","import React from 'react';\r\nimport SearchableDiscreteColorLegend from 'react-vis/dist/legends/searchable-discrete-color-legend';\r\n\r\nexport default class Legend extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      searchText: '',\r\n      onClick: props.onClick\r\n    };\r\n    this.state.items = this.props.tags.map((tag) => {\r\n        return {title: tag.tag_name, color: tag.curve_color, tag_id:tag.tag_id, disabled:tag.disabled}\r\n    });\r\n  }\r\n\r\n  _clickHandler = item => {\r\n    const {items} = this.state;\r\n    item.disabled = !item.disabled;\r\n    this.state.onClick(item.tag_id);    \r\n    this.setState({items});\r\n  };\r\n\r\n  _searchChangeHandler = searchText => {\r\n    this.setState({searchText});\r\n  };\r\n\r\n  render() {\r\n    const {items, searchText} = this.state;\r\n    return (\r\n    <div className='d-block pl-3'>\r\n      <SearchableDiscreteColorLegend\r\n        height={400}\r\n        // width={300}\r\n        onSearchChange={this._searchChangeHandler}\r\n        // searchPlaceholder={'Поиск...'}\r\n        searchText={searchText}\r\n        onItemClick={this._clickHandler}\r\n        items={items}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Graph from './Graph'\r\nimport Legend from './Legend'\r\n\r\n\r\nfunction TagsHistoricalGraph(props) {\r\n    const tags = props.tagsHistory  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row m-0 p-0\">\r\n                <div className=\"col-8 m-0 p-0\">\r\n                    <Graph tags={tags} disabledGraphs={props.disabledGraphs} />\r\n                </div>\r\n                <div className=\"col-4 m-0 p-0\">\r\n                    <Legend tags={tags} disabledGraphs={props.disabledGraphs} onClick={props.toggleCurveDisplay} />\r\n                </div>\r\n            </div>\r\n        </ React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nTagsHistoricalGraph.propTypes = {\r\n    tagsHistory: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default TagsHistoricalGraph","const colors = ['#19CDD7', '#DDB27C', '#88572C', '#FF991F', '#F15C17', '#223F9A', '#DA70BF', '#125C77', '#4DC19C', '#776E57', '#12939A', '#17B8BE', '#F6D18A', '#B7885E', '#FFCB99', '#F89570', '#829AE3', '#E79FD5', '#1E96BE', '#89DAC1', '#B3AD9E']\r\n\r\nexport default function getColor(index) {\r\n    const clorsNumber = colors.length\r\n    var ind\r\n    if (index+1 > clorsNumber) {\r\n        ind = index % clorsNumber\r\n    }\r\n    else {\r\n        ind = index\r\n    }\r\n    return colors[ind]\r\n}","import React, { useEffect } from 'react' \r\nimport Loader from '../../components/BaseParts/Loader'\r\nimport TagsCurrentValueList from '../../components/TagsList/TagsCurrentValueList'\r\n\r\nimport TagsHistoricalGraph from '../../components/TagsGraph/TagsHistoricalGraph'\r\nimport getColor from '../../components/TagsGraph/GraphColors'\r\n\r\nimport getBaseUrl from '../../utils/localSettings'\r\nconst BASE_URL = getBaseUrl()\r\n\r\nexport default function DeviceOverviewPage() {\r\n  const [tags, setTags] = React.useState([])\r\n  const [deviceName, setDeviceName] = React.useState('')\r\n  const [loading, setLoading] = React.useState(true)\r\n  const [tagsHistory, setTagsHistory] = React.useState([])\r\n\r\n  function readDeviceParameters() {\r\n    fetch(BASE_URL + \"api/v1/device\")\r\n      .then(responce => responce.json())\r\n      .then(deviceParameters => { setDeviceName(deviceParameters.name) }) \r\n  }\r\n\r\n  function readDeviceTags() {\r\n    fetch(BASE_URL + \"api/v1/device/current-values\")\r\n    .then(responce => responce.json())\r\n    .then(tags => setTags(tags) )  \r\n  }\r\n\r\n  function readTagsHistory() {\r\n    fetch(BASE_URL + \"api/v1/device/tags/history\")\r\n    .then(responce => responce.json())\r\n    .then(tags => {\r\n      const prepared_tags = tags.map( (tag, index) => {\r\n        return ({\r\n          tag_id: tag.tag_id,\r\n          tag_code: tag.tag_code,\r\n          tag_name: tag.tag_name,\r\n          disabled: !tag.display_on_garaph,\r\n          curve_color : getColor(index),\r\n          values: tag.values.map( (value) => {\r\n            return {x: new Date(value.add_date), y: value.value}\r\n          })\r\n        })\r\n      })  \r\n      setTagsHistory( (prev) => {\r\n        return prepared_tags.map( (tag)=> {\r\n          const fltr = prev.filter( entry=>entry.tag_id === tag.tag_id )\r\n          var disabled = (fltr.length > 0) ? fltr[0].disabled : tag.disabled\r\n          return {...tag, disabled: disabled}\r\n        })\r\n      })\r\n    })  \r\n  }\r\n\r\n  // read parameters\r\n  useEffect(() => {\r\n    readDeviceParameters();\r\n    readDeviceTags();\r\n    readTagsHistory();\r\n    setTimeout( () => { setLoading(false) }, 2000);\r\n\r\n    // set update interval\r\n    const tagsUpdateInterval = setInterval(readDeviceTags, 2000);\r\n    const graphUpdateInterval = setInterval( readTagsHistory, 60000)\r\n    return () => {\r\n      clearInterval(tagsUpdateInterval);\r\n      clearInterval(graphUpdateInterval);\r\n    };\r\n  }, [])\r\n\r\n  // toggle curve display\r\n  function toggleCurveDisplay(tag_id){\r\n    const n = tagsHistory.map( entry => { \r\n      if (entry.tag_id===tag_id) { entry.disabled = !entry.disabled } \r\n      return entry\r\n    })\r\n    setTagsHistory(n)\r\n  }\r\n\r\n  // render the page\r\n  return (\r\n    <React.Fragment>\r\n        <p>Устройство: <b>{deviceName}</b></p>\r\n        {loading ? <Loader /> : <TagsCurrentValueList tags={tags} />}\r\n        {loading ? null : <TagsHistoricalGraph tagsHistory={tagsHistory} toggleCurveDisplay={toggleCurveDisplay}/> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","\r\n\r\nexport default function getBaseUrl(){\r\n    return \"http://bfcloud.space/\"\r\n    // return \"http://localhost:8000/\"\r\n}","import React from 'react' \r\n\r\n\r\nexport default function DeviceSettingsPage() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <h3>Настройки устройства</h3>\r\n        <p>Раздел находиться в разработке ... </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n ","import React from 'react' \r\n\r\n\r\nexport default function DeviceEventsLogPage() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <h3>Журнал событий обьекта</h3>\r\n        <p>Раздел находиться в разработке ... </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n ","import React, { useEffect } from 'react' \r\nimport Loader from '../../components/BaseParts/Loader'\r\n\r\nimport TagsHistoricalGraph from '../../components/TagsGraph/TagsHistoricalGraph'\r\nimport getColor from '../../components/TagsGraph/GraphColors'\r\n\r\nimport getBaseUrl from '../../utils/localSettings'\r\nconst BASE_URL = getBaseUrl()\r\n\r\nexport default function DeviceOverviewPage() {\r\n  const [deviceName, setDeviceName] = React.useState('')\r\n  const [loading, setLoading] = React.useState(true)\r\n  const [tagsHistory, setTagsHistory] = React.useState([])\r\n\r\n  function readDeviceParameters() {\r\n    fetch(BASE_URL + \"api/v1/device\")\r\n      .then(responce => responce.json())\r\n      .then(deviceParameters => { setDeviceName(deviceParameters.name) }) \r\n  }\r\n\r\n  function readTagsHistory() {\r\n    fetch(BASE_URL + \"api/v1/device/tags/history\")\r\n    .then(responce => responce.json())\r\n    .then(tags => {\r\n      const prepared_tags = tags.map( (tag, index) => {\r\n        return ({\r\n          tag_id: tag.tag_id,\r\n          tag_code: tag.tag_code,\r\n          tag_name: tag.tag_name,\r\n          disabled: !tag.display_on_garaph,\r\n          curve_color : getColor(index),\r\n          values: tag.values.map( (value) => {\r\n            return {x: new Date(value.add_date), y: value.value}\r\n          })\r\n        })\r\n      })  \r\n      setTagsHistory( (prev) => {\r\n        return prepared_tags.map( (tag)=> {\r\n          const fltr = prev.filter( entry=>entry.tag_id === tag.tag_id )\r\n          var disabled = (fltr.length > 0) ? fltr[0].disabled : tag.disabled\r\n          return {...tag, disabled: disabled}\r\n        })\r\n      })\r\n    })  \r\n  }\r\n\r\n  // read parameters\r\n  useEffect(() => {\r\n    readDeviceParameters();\r\n    readTagsHistory();\r\n    setTimeout( () => { setLoading(false) }, 2000);\r\n\r\n    // set update interval\r\n    const graphUpdateInterval = setInterval( readTagsHistory, 10000)\r\n    return () => {\r\n      clearInterval(graphUpdateInterval);\r\n    };\r\n  }, [])\r\n\r\n  // toggle curve display\r\n  function toggleCurveDisplay(tag_id){\r\n    const n = tagsHistory.map( entry => { \r\n      if (entry.tag_id===tag_id) { entry.disabled = !entry.disabled } \r\n      return entry\r\n    })\r\n    setTagsHistory(n)\r\n  }\r\n\r\n  // render the page\r\n  return (\r\n    <React.Fragment>\r\n        <p>Устройство: <b>{deviceName}</b></p>\r\n        {loading ? <Loader /> : null }\r\n        {loading ? null : <TagsHistoricalGraph tagsHistory={tagsHistory} toggleCurveDisplay={toggleCurveDisplay}/> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","import React from 'react' \r\n\r\n\r\nexport default function Page404() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <h1>Error 404</h1>\r\n        <p>Page not found</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n ","import React from 'react' \r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\n\r\nimport Sidebar from '../../components/BaseParts/Sidebar'\r\nimport DeviceOverviewPage from './overview'\r\nimport DeviceSettingsPage from './settings'\r\nimport DeviceEventsLogPage from './eventsLog'\r\nimport DeviceGraphsPage from './graphs'\r\nimport Page404 from '../pageNotFound'\r\n\r\nexport default function DeviceApp() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <div className=\"row m-0 p-0\">\r\n          <Sidebar />\r\n          <div className=\"col-10 m-0 p-0\">\r\n            <div className=\"content-height p-3\">\r\n              <Switch>\r\n                <Route exact path='/device' component={DeviceOverviewPage} />\r\n                <Route exact path='/device/overview' component={DeviceOverviewPage} />\r\n                <Route exact path='/device/settings' component={DeviceSettingsPage} />\r\n                <Route exact path='/device/events' component={DeviceEventsLogPage} />\r\n                <Route exact path='/device/graphs' component={DeviceGraphsPage} />\r\n                <Route component={Page404} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n","import React from 'react' \r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function WelcomePage() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className='p-3 w-100'>\r\n            <div className='container text-center'>\r\n                <h3 className='text-muted'>Добро пожаловать на <b>BFCloud</b></h3>\r\n            </div>\r\n            <br/>\r\n            <div className='container text-center'>\r\n                <p>Чтоб перейти к обзору подключенных устройств, кликните по ссылке ниже:</p>\r\n                <Link to=\"/device/overview\">Обзор БУМ-14</Link>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n ","import './App.css'\r\nimport '../node_modules/react-vis/dist/style.css'\r\n\r\nimport React from 'react' \r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\n\r\nimport Navbar from './components/BaseParts/Navbar'\r\nimport DeviceApp from './pages/device/deviceApp'\r\nimport WelcomePage from './pages/welcome'\r\nimport Page404 from './pages/pageNotFound'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={WelcomePage} />\r\n          <Route path='/device' component={DeviceApp} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}